/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESCAPE>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34>;
        };

        exclm {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 13>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
        };

        dllr {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        percnt {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
        };

        str {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
        };

        leftparen {
            bindings = <&kp LPAR>;
            key-positions = <9 21>;
        };

        rparen {
            bindings = <&kp RPAR>;
            key-positions = <10 22>;
        };

        layout_switch {
            bindings = <&tog 4>;
            key-positions = <36 37 40 41>;
        };

        system_reset {
            bindings = <&sys_reset>;
            key-positions = <3 4 5>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <15 16 17>;
        };

        system_layer_combo {
            bindings = <&mo 3>;
            key-positions = <36 37>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
        change_window1: change_window1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp Q>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "CHANGE_WINDOW1";
        };

        change_window2: change_window2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "CHANGE_WINDOW2";
        };

        change_window3: change_window3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp E>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "CHANGE_WINDOW3";
        };

        change_window4: change_window4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp R>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "CHANGE_WINDOW4";
        };

        change_desktop1: change_desktop1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "CHANGE_DESKTOP1";
        };

        change_desktop2: change_desktop2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_2>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "CHANGE_DESKTOP2";
        };

        change_desktop3: change_desktop3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_3>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "CHANGE_DESKTOP3";
        };

        change_desktop4: change_desktop4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "CHANGE_DESKTOP4";
        };

        move_to_w1: move_to_w1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "MOVE_TO_W1";
        };

        move_to_w2: move_to_w2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "MOVE_TO_W2";
        };

        move_to_w3: move_to_w3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp D>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "MOVE_TO_W3";
        };

        move_to_w4: move_to_w4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp F>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "MOVE_TO_W4";
        };
    };

    behaviors {
        shift: shift {
            compatible = "zmk,behavior-sticky-key";
            label = "SHIFT";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <(-1)>;
            quick-release;
        };

        layertap: layertap {
            compatible = "zmk,behavior-sticky-key";
            label = "LAYERTAP";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <(-1)>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <1 4 5 13 14 15 16 17 25 26 27 28 29 2 3 36 37 38 39 40 41>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <10 6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 39 40 41 38 37 36>;
            hold-trigger-on-release;
        };

        vim_tap1: vim_tap1 {
            compatible = "zmk,behavior-tap-dance";
            label = "VIM_TAP1";
            #binding-cells = <0>;
            bindings = <&layertap 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            bindings = <
&none  &kp Q  &kp W  &kp F             &kp P         &kp B          &kp J        &kp L                      &kp U             &kp Y    &kp SEMICOLON  &none
&none  &kp A  &kp R  &kp S             &kp T         &kp G          &kp M        &kp N                      &kp E             &kp I    &kp O          &none
&none  &kp Z  &kp X  &kp C             &kp D         &kp V          &kp K        &kp H                      &kp COMMA         &kp DOT  &kp FSLH       &none
                     &kp LEFT_CONTROL  &kp LEFT_GUI  &lt 2 SPACE    &lt 1 ENTER  &mt RIGHT_SHIFT BACKSPACE  &mt LEFT_ALT ESC
            >;
        };

        numsym_layer {
            bindings = <
&trans  &kp N1        &kp N2     &kp N3   &kp N4   &kp N5          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans        &trans
&trans  &kp NUMBER_6  &kp N7     &kp N8   &kp N9   &kp NUMBER_0    &kp LEFT          &kp DOWN           &kp UP          &kp RIGHT        &kp ASTERISK  &trans
&trans  &kp GRAVE     &kp TILDE  &kp DQT  &kp SQT  &kp BSLH        &kp LESS_THAN     &kp GREATER_THAN   &kp MINUS       &kp EQUAL        &kp SLASH     &trans
                                 &trans   &trans   &to 4           &trans            &trans             &trans
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F1  &kp F4  &kp F7  &kp F10  &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &kp K_PASTE     &kp UP_ARROW    &kp K_COPY  &kp ESC        &trans
&trans  &kp F2  &kp F5  &kp F8  &kp F11  &kp C_MUTE      &kp C_PLAY_PAUSE      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT   &kp PG_UP      &trans
&trans  &kp F3  &kp F6  &kp F9  &kp F12  &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp K_UNDO      &kp K_REDO      &kp K_CUT   &kp PAGE_DOWN  &trans
                        &trans  &trans   &trans          &to 3                 &trans          &trans
            >;
        };

        sys_layer {
            bindings = <
&trans  &trans        &trans        &bt BT_PRV    &bt BT_NXT    &trans            &none   &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans  &none   &none   &none   &none   &trans
&trans  &bootloader   &sys_reset    &none         &bt BT_CLR    &bt BT_CLR_ALL    &none   &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };

        qwerty_layer {
            bindings = <
&trans  &kp Q  &kp W  &kp E             &kp R         &kp T          &kp Y        &kp U                     &kp I              &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D             &kp F         &kp G          &kp H        &kp J                     &kp K              &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C             &kp V         &kp B          &kp N        &kp M                     &kp COMMA          &kp DOT  &kp FSLH  &trans
                      &kp LEFT_CONTROL  &kp LEFT_GUI  &lt 2 SPACE    &lt 1 ENTER  &mt LEFT_SHIFT BACKSPACE  &mt RIGHT_ALT ESC
            >;
        };
    };
};
